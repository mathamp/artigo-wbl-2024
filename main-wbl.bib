@ARTICLE{ConflictDetectionORAN,
  author={Adamczyk, Cezary and Kliks, Adrian},
  journal={IEEE Communications Magazine}, 
  title={Conflict Mitigation Framework and Conflict Detection in O-RAN Near-RT RIC}, 
  year={2023},
  volume={61},
  number={12},
  pages={199-205},
  keywords={Computer architecture;Microprocessors;Handover;Quality of service;Optimization;Behavioral sciences;Standards organizations;Radio access networks},
  doi={10.1109/MCOM.018.2200752}}


@Article{ConflictDetectionSurvey,
AUTHOR = {Pradeep, Pavana and Kant, Krishna},
TITLE = {Conflict Detection and Resolution in IoT Systems: A Survey},
JOURNAL = {IoT},
VOLUME = {3},
YEAR = {2022},
NUMBER = {1},
PAGES = {191--218},
URL = {https://www.mdpi.com/2624-831X/3/1/12},
ISSN = {2624-831X},
ABSTRACT = {Internet of Things (IoT) systems are becoming ubiquitous in various cyber–physical infrastructures, including buildings, vehicular traffic, goods transport and delivery, manufacturing, health care, urban farming, etc. Often multiple such IoT subsystems are deployed in the same physical area and designed, deployed, maintained, and perhaps even operated by different vendors or organizations (or “parties”). The collective operational behavior of multiple IoT subsystems can be characterized via (1) a set of operational rules and required safety properties and (2) a collection of IoT-based services or applications that interact with one another and share concurrent access to the devices. In both cases, this collective behavior often leads to situations where their operation may conflict, and the conflict resolution becomes complex due to lack of visibility into or understanding of the cross-subsystem interactions and inability to do cross-subsystem actuations. This article addresses the fundamental problem of detecting and resolving safety property violations. We detail the inherent complexities of the problem, survey the work already performed, and layout the future challenges. We also highlight the significance of detecting/resolving conflicts proactively, i.e., dynamically but with a look-ahead into the future based on the context.},
DOI = {10.3390/iot3010012}
}

@Article{ConflictDetectionFuture,
AUTHOR = {Lee, Suk Kyu and Bae, Mungyu and Kim, Hwangnam},
TITLE = {Future of IoT Networks: A Survey},
JOURNAL = {Applied Sciences},
VOLUME = {7},
YEAR = {2017},
NUMBER = {10},
ARTICLE-NUMBER = {1072},
URL = {https://www.mdpi.com/2076-3417/7/10/1072},
ISSN = {2076-3417},
ABSTRACT = {The introduction of mobile devices has changed our daily lives. They enable users to obtain information even in a nomadic environment and provide information without limitations. A decade after the introduction of this technology, we are now facing the next innovation that will change our daily lives. With the introduction of the Internet of Things (IoT), our communication ability will not be restricted to only mobile devices. Rather, it will expand to all things with which we coexist. Many studies have discussed IoT-related services and platforms. However, there are only limited discussions about the IoT network. In this paper, we will thoroughly analyze the technical details about the IoT network. Based on our survey of papers, we will provide insight about the future IoT network and the crucial components that will enable it.},
DOI = {10.3390/app7101072}
}

@INPROCEEDINGS{IoTC2,
  author={Al Farooq, Abdullah and Al-Shaer, Ehab and Moyer, Thomas and Kant, Krishna},
  booktitle={2019 IFIP/IEEE Symposium on Integrated Network and Service Management (IM)}, 
  title={IoTC2: A Formal Method Approach for Detecting Conflicts in Large Scale IoT Systems}, 
  year={2019},
  volume={},
  number={},
  pages={442-447},
  keywords={Actuators;Safety;Internet of Things;Thermostats;Temperature sensors;Smart homes;Internet of Things(IoT);Formal Method;Conflicts;Policies;Simulation;Safety;Security},
  doi={}}

@article{RewritingLogicTwentyYears,
title = {Twenty years of rewriting logic},
journal = {The Journal of Logic and Algebraic Programming},
volume = {81},
number = {7},
pages = {721-781},
year = {2012},
note = {Rewriting Logic and its Applications},
issn = {1567-8326},
doi = {https://doi.org/10.1016/j.jlap.2012.06.003},
url = {https://www.sciencedirect.com/science/article/pii/S1567832612000707},
author = {José Meseguer},
keywords = {Rewriting logic, Concurrency, Logical frameworks, Temporal logics, Formal specification and verification, Programming language semantics, Networks and distributed systems, Real-time systems, Probabilistic systems, Security, Bioinformatics},
abstract = {Rewriting logic is a simple computational logic that can naturally express both concurrent computation and logical deduction with great generality. This paper provides a gentle, intuitive introduction to its main ideas, as well as a survey of the work that many researchers have carried out over the last twenty years in advancing: (i) its foundations; (ii) its semantic framework and logical framework uses; (iii) its language implementations and its formal tools; and (iv) its many applications to automated deduction, software and hardware specification and verification, security, real-time and cyber-physical systems, probabilistic systems, bioinformatics and chemical systems.}
}

@article{MaudeExplanation,
title = {Programming and symbolic computation in Maude},
journal = {Journal of Logical and Algebraic Methods in Programming},
volume = {110},
pages = {100497},
year = {2020},
issn = {2352-2208},
doi = {https://doi.org/10.1016/j.jlamp.2019.100497},
url = {https://www.sciencedirect.com/science/article/pii/S2352220818301135},
author = {Francisco Durán and Steven Eker and Santiago Escobar and Narciso Martí-Oliet and José Meseguer and Rubén Rubio and Carolyn Talcott},
keywords = {Maude and rewriting logic, Strategies, External objects, Unification and narrowing, Symbolic model checking, Meta-interpreters},
abstract = {Rewriting logic is both a flexible semantic framework within which widely different concurrent systems can be naturally specified and a logical framework in which widely different logics can be specified. Maude programs are exactly rewrite theories. Maude has also a formal environment of verification tools. Symbolic computation is a powerful technique for reasoning about the correctness of concurrent systems and for increasing the power of formal tools. We present several new symbolic features of Maude that enhance formal reasoning about Maude programs and the effectiveness of formal tools. They include: (i) very general unification modulo user-definable equational theories, and (ii) symbolic reachability analysis of concurrent systems using narrowing. The paper does not focus just on symbolic features: it also describes several other new Maude features, including: (iii) Maude's strategy language for controlling rewriting, and (iv) external objects that allow flexible interaction of Maude object-based concurrent systems with the external world. In particular, meta-interpreters are external objects encapsulating Maude interpreters that can interact with many other objects. To make the paper self-contained and give a reasonably complete language overview, we also review the basic Maude features for equational rewriting and rewriting with rules, Maude programming of concurrent object systems, and reflection. Furthermore, we include many examples illustrating all the Maude notions and features described in the paper.}
}